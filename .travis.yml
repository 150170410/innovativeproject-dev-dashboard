language: csharp
mono: none
sudo: required
notifications:
   webhooks:
    urls:
      - https://webhook.site/d3c078e7-1a7d-4bf9-9d27-ff4d19d4db8b
      - https://agile-beach-74761.herokuapp.com/api/Webhook/PipelineWebhook/travis
    on_success: always # default: always
    on_failure: always # default: always
    on_start: always   # default: never
    on_cancel: always # default: always
    on_error: always # default: always
env:
  - DOCKER_COMPOSE_VERSION=1.20.1
cache:
  directories:
    - $HOME/.npm
    - $HOME/.nuget/packages

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose --version
  - docker ps

stages:
  - build_all
  - test
  - name: deploy_images_to_registry
    if: (branch = develop) AND (type IN (push))
  - name: deploy_to_heroku
    if: (branch = develop) AND (type IN (push))
jobs:
    include:
        - stage: build_all
          script: docker-compose -f ./src/docker-compose.yml build dashboard.webapi
        - script: docker-compose -f ./src/docker-compose.yml build dashboard.web

        - stage: test
          script:
            - docker-compose -f ./src/docker-compose.tests.yml run --rm webapi.unittests
        - script: docker-compose -f ./src/docker-compose.tests.yml run --rm frontend.test npm run test
        #- script: docker-compose -f ./src/docker-compose.tests.yml run --rm frontend.test npm run e2e
        #- script: docker-compose -f ./src/docker-compose.tests.yml run --rm frontend.test npm run lint

        - stage: deploy_images_to_registry
          script:
            - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
            - docker-compose -f ./src/docker-compose.yml build dashboard.webapi
            - docker-compose -f ./src/docker-compose.yml push dashboard.webapi
        - script:
            - docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
            - docker-compose -f ./src/docker-compose.yml build dashboard.web
            - docker-compose -f ./src/docker-compose.yml push dashboard.web

        - stage: deploy_to_heroku
          script:
            - docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
            - docker pull registry.hub.docker.com/randomdocker729/cidashboard-webapi:latest
            - docker tag registry.hub.docker.com/randomdocker729/cidashboard-webapi:latest registry.heroku.com/cidasherapi/web
            - docker push registry.heroku.com/cidasherapi/web
        - script:
          - docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
          - docker pull registry.hub.docker.com/randomdocker729/cidashboard-frontend:latest
          - docker tag registry.hub.docker.com/randomdocker729/cidashboard-frontend:latest registry.heroku.com/cidasher/web
          - docker push registry.heroku.com/cidasher/web
